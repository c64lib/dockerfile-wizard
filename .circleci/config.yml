image_config: &image_config

  # make sure to set your Docker Hub username & password in CircleCI,
  # either as project-specific environment variables
  # or as resources in your organization's org-global Context

  IMAGE_NAME: c64libci

  IMAGE_TAG: 0.1.4

  # NOTE: if you're modifying this config.yml file manually
  # rather than using the included setup script,
  # make sure you also add the values of your IMAGE_NAME & IMAGE_TAG variables
  # to the `test_image` job (line 55)

  LINUX_VERSION: DEBIAN_BUSTER

  # RUBY_VERSION_NUM: # pick a version from https://cache.ruby-lang.org/pub/ruby

  # NODE_VERSION_NUM: # pick a version from https://nodejs.org/dist

  # PYTHON_VERSION_NUM: # pick a version from https://python.org/ftp/python

  JAVA: false

  MYSQL_CLIENT: false

  POSTGRES_CLIENT: false

  DOCKERIZE: false

  BROWSERS: false

version: 2
commands:
  install:
    steps:
      - run:
          name: "Install Heroku CLI, if necessary"
          command: |
            if [[ $(command -v heroku) == "" ]]; then
              curl https://cli-assets.heroku.com/install.sh | sh
            else
              echo "Heroku is already installed. No operation was performed."
            fi
jobs:
  build:
    machine: true
    environment:
      <<: *image_config

    steps:
      - checkout

      - run: bash scripts/generate.sh > Dockerfile
      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run: docker push $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG && sleep 10
      #      - run: heroku container:login
#      - run: heroku container:push web
#      - run: heroku container:release web

      - store_artifacts:
          path: Dockerfile

  test_image:
    docker:
      - image: $DOCKER_USERNAME/c64libci:0.1.4
        environment:
          <<: *image_config

    steps:
      - checkout

      - run:
          name: start Xvfb for phantomjs test
          # command: Xvfb :99
          # background: true

      - run:
          name: bats tests
          command: |
            mkdir -p test_results/bats
            bats scripts/tests.bats | \
            perl scripts/tap-to-junit.sh > \
            test_results/bats/results.xml

      - store_test_results:
          path: test_results

      - store_artifacts:
          path: test_results

workflows:
  version: 2
  dockerfile_wizard:
    jobs:
      - build:
          context: org-global

#      - test_image:
#          context: org-global
#          requires:
#            - build
